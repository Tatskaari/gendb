package template_test

import (
	"github.com/stretchr/testify/suite"
	template "github.com/tatskaari/gendb/recgen/template"
	"regexp"
	"testing"
)

type tempalteSuite struct {
	suite.Suite
}

func TestSuite(t *testing.T) {
	suite.Run(t, new(tempalteSuite))
}

func (s *tempalteSuite) TestGenerate() {
	code, err := template.Generate(template.Data{
		Package:   "model",
		CMD:       "genrec",
		TableName: "foo",
		Columns: []template.Column{
			{VariableName: "ID", ColName: "foo.id"},
			{VariableName: "Name", ColName: "foo.name"},
			{VariableName: "BarID", ColName: "foo.bar_id"},
		},
	})
	s.Require().NoError(err)

	const expectedCode = `
	// Code generated by genrec; DO NOT EDIT.
	package model
	
	import (
		"github.com/tatskaari/gendb/builder"
	)
	const TableName = "foo"
	var (
		ID = builder.Col("foo.id")
		Name = builder.Col("foo.name")
        BarID = builder.Col("foo.bar_id")
		AllColumns = []string{
			"foo.id",
			"foo.name",
			"foo.bar_id",
		}
	)
`
	s.Equal(normaliseWhitespace(expectedCode), normaliseWhitespace(code))
}

func normaliseWhitespace(text string) string {
	var re = regexp.MustCompile(`\s+`)
	return re.ReplaceAllString(text, ` `)
}
